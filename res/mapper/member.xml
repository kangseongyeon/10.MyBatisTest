<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberTest">

<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL 문을 기술한다
	
	사용할 수 있는 기본적인 태그들
	
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 주요 속성들
	
	1) id(필수값): 해당 SQL문을 호출할 때 namespace 값과 연결하여 사용하는 쿼리이름
	
	2) parameterType : SQL문에 사용될 데이터를 담은 객체타입을 지정한다 => 생략 가능
					   (보통 VO 클래스, 자바의 기본타입명 등이 사용된다)
					   
	3) resultType : select문을 실행한 결과를 담기 위한 객체타입을 지정한다
					(보통 VO 클래스, 자바의 기본타입명 등이 사용된다)
					
	4) resultMap : 결과 레크드 컬럼명과 VO 객체의 속성명이 다를 경우에 적절한 매핑작업을 위해 사용한다
 -->				

	<insert id="insertMember" parameterType="kr.or.ddit.member.vo.MemberVO">
	
		insert into mymember(MEM_ID, MEM_NAME, MEM_TEL, MEM_ADDR) 
		VALUES (#{memId}, #{memName},  #{memTel},  #{memAddr})
	
	</insert>
	
	<update id="updateMember" parameterType="kr.or.ddit.member.vo.MemberVO">
	
		update mymember set mem_name = #{memName}, mem_tel = #{memTel}, mem_addr = #{memAddr} 
    	where mem_id = #{memId}
    	
	</update>

	
	<delete id="deleteMember" parameterType="String">
	
		delete from mymember where mem_id = #{memId}
	
	</delete>
	
	<select id="selectAllMember" resultType="kr.or.ddit.member.vo.MemberVO">
	
		select mem_id as memId, 
			   mem_name as memName, 
			   mem_tel as memTel, 
			   mem_addr as memAddr, 
			   reg_dt as regDt
		from mymember
	
	</select>

</mapper>